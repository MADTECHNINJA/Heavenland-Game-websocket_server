apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
  labels:
    app: {{ .Values.app.name }}
    group: {{ .Values.app.group }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        group: {{ .Values.app.group }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.repo }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.app.container.env.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/
              port: http
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3  
            initialDelaySeconds: 70
          readinessProbe:
            httpGet:
              path: /api/
              port: http
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3        
            initialDelaySeconds: 70
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: {{ .Values.app.container.env.settings_module | quote }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.22.0
          command: ["/cloud_sql_proxy",
                    "-instances=extreme-arch-347212:us-central1:heavenland-backend=tcp:5432",
                    "-credential_file=/secrets/cloudsql/cloud_sql_credentials.json"]
          volumeMounts:
            - name: websocket-server-secrets-volume
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: websocket-server-secrets-volume
          secret:
            secretName: {{ .Values.secrets.volume.name }}
